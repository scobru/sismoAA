{
  "language": "Solidity",
  "sources": {
    "contracts/SismoPK.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract SismoPK {\r\n    mapping(bytes32 => mapping(bytes32 => bytes)) private vaults;\r\n    bytes32[] public allVaultIds;\r\n\r\n    function setWalletInfo(\r\n        bytes32 encryptedVaultId,\r\n        bytes32 appId,\r\n        bytes memory walletInfo\r\n    ) public {\r\n        require(\r\n            vaults[appId][encryptedVaultId].length == 0,\r\n            \"Wallet info already exists\"\r\n        );\r\n        vaults[appId][encryptedVaultId] = walletInfo;\r\n        allVaultIds.push(encryptedVaultId);\r\n    }\r\n\r\n    function getWalletInfo(\r\n        bytes32 encryptedVaultId,\r\n        bytes32 appId\r\n    ) public view returns (bytes memory) {\r\n        return vaults[appId][encryptedVaultId];\r\n    }\r\n}\r\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "viaIR": true,
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates",
          "devdoc",
          "userdoc"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}